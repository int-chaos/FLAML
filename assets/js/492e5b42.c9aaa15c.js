"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6011],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=u(n),f=a,m=s["".concat(c,".").concat(f)]||s[f]||g[f]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},7613:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return s}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_label:"training_args",title:"nlp.huggingface.training_args"},c=void 0,u={unversionedId:"reference/nlp/huggingface/training_args",id:"reference/nlp/huggingface/training_args",isDocsHomePage:!1,title:"nlp.huggingface.training_args",description:"TrainingArgumentsForAuto Objects",source:"@site/docs/reference/nlp/huggingface/training_args.md",sourceDirName:"reference/nlp/huggingface",slug:"/reference/nlp/huggingface/training_args",permalink:"/FLAML/docs/reference/nlp/huggingface/training_args",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/reference/nlp/huggingface/training_args.md",tags:[],version:"current",frontMatter:{sidebar_label:"training_args",title:"nlp.huggingface.training_args"},sidebar:"referenceSideBar",previous:{title:"trainer",permalink:"/FLAML/docs/reference/nlp/huggingface/trainer"},next:{title:"utils",permalink:"/FLAML/docs/reference/nlp/utils"}},p=[{value:"TrainingArgumentsForAuto Objects",id:"trainingargumentsforauto-objects",children:[],level:2}],g={toc:p};function s(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"trainingargumentsforauto-objects"},"TrainingArgumentsForAuto Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass TrainingArgumentsForAuto(TrainingArguments)\n")),(0,i.kt)("p",null,"FLAML custom TrainingArguments."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"output_dir")," ",(0,i.kt)("em",{parentName:"li"},"str")," - data root directory for outputing the log, etc."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"model_path")," ",(0,i.kt)("em",{parentName:"li"},'str, optional, defaults to "facebook/muppet-roberta-base"')," - A string,\nthe path of the language model file, either a path from huggingface\nmodel card huggingface.co/models, or a local path for the model."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fp16")," ",(0,i.kt)("em",{parentName:"li"},'bool, optional, defaults to "False"')," - A bool, whether to use FP16."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"max_seq_length")," ",(0,i.kt)("em",{parentName:"li"},"int, optional, defaults to 128")," - An integer, the max length of the sequence."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ckpt_per_epoch")," ",(0,i.kt)("em",{parentName:"li"},"int, optional, defaults to 1")," - An integer, the number of checkpoints per epoch.")))}s.isMDXComponent=!0}}]);